1004. Max Consecutive Ones III

Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.

 

Example 1:

Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.

1)i=0;j=0
2)keep iterating j till you encounter k zeros and decrement k
3)when k<0 if i encounter a 0 k++ because youre removing that 0 from the window 
4)update count =j-1;

class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        int i=0,j=0;
        int count=0;
        while(j<nums.size())
        {
            if(nums[j]==0)
            {
                k--;
            }
            if(k<0)
            {
                if(nums[i]==0)
                {
                    k++;
                }
                i++;
            }
            j++;
            count=max(count,j-i);
        }
         return count;
    }
};
