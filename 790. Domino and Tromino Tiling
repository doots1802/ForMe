790. Domino and Tromino Tiling

You have two types of tiles: a 2 x 1 domino shape and a tromino shape. You may rotate these shapes.


Given an integer n, return the number of ways to tile an 2 x n board. Since the answer may be very large, return it modulo 109 + 7.

In a tiling, every square must be covered by a tile. Two tilings are different if and only if there are two 4-directionally adjacent cells on the board such that exactly one of the tilings has both squares occupied by a tile.

1)create a vector of size 1001 as constrainsts are 1 to 1001 look at contraints
2)see a pattern where 
n=1 1
n=2 2
n=3 5
n=4 11(2*5+1)
n=5 24(2*11+2)
therefore 2*output[n-1]+output[n-3]

class Solution {
public:
    int numTilings(int n) {
        vector<long long>output(1001,0);
        int mod=1e9+7;
        output[1]=1;
        output[2]=2;
        output[3]=5;
        if(n<=3)
        {
            return output[n];
        }
        for(int i=4;i<n+1;i++)
        {
            output[i]=2*output[i-1]+output[i-3];
            output[i]%=mod;
        }
        return output[n];
    }
};
